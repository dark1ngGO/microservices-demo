# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: frontend
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: nginx-metrics
          image: nginx:alpine
          securityContext:
            runAsUser: 101  # NGINX user
            runAsGroup: 101
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: nginx-metrics-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-temp
              mountPath: /var/cache/nginx
            - name: nginx-temp
              mountPath: /var/run
          command: ["nginx", "-g", "daemon off;"]

        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:0.11.0
          args:
            - '-nginx.scrape-uri=http://localhost:8081/stub_status'
          ports:
            - containerPort: 9113

        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: gcr.io/google-samples/microservices-demo/frontend:v0.8.0
          ports:
            - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-liveness-probe"
          env:
            - name: PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice:3550"
            - name: CURRENCY_SERVICE_ADDR
              value: "currencyservice:7000"
            - name: CART_SERVICE_ADDR
              value: "cartservice:7070"
            - name: RECOMMENDATION_SERVICE_ADDR
              value: "recommendationservice:8080"
            - name: SHIPPING_SERVICE_ADDR
              value: "shippingservice:50051"
            - name: CHECKOUT_SERVICE_ADDR
              value: "checkoutservice:5050"
            - name: AD_SERVICE_ADDR
              value: "adservice:9555"
            - name: SHOPPING_ASSISTANT_SERVICE_ADDR
              value: "shoppingassistantservice:80"
            - name: ENABLE_PROFILER
              value: "0"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
      volumes:
        - name: nginx-metrics-config
          configMap:
            name: nginx-metrics-config
        - name: nginx-temp
          emptyDir: {}

---



apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: metrics
      port: 9113
      targetPort: 9113

---

apiVersion: v1
kind: Service
metadata:
  name: frontend-external
  labels:
    app: frontend
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 8080

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-metrics-config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    events {
      worker_connections 1024;
    }
    http {
      server {
        listen 8081;
        location /stub_status {
          stub_status;
          allow 127.0.0.1;
          deny all;
        }
      }
    }
